
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> NEI <- readRDS("summarySCC_PM25.rds")
> SCC <- readRDS("Source_Classification_Code.rds")
> 
> # Compare emissions from motor vehicle sources in Baltimore City with emissions from motor vehicle sources in Los Angeles County, California (fips == "06037"). 
> # Which city has seen greater changes over time in motor vehicle emissions?
> 
> SCCMotor <- SCC[grepl("On-Road", SCC$EI.Sector, ignore.case=FALSE), ]
> 
> NEIBalCity <- NEI[NEI$fips=="24510", ]
> NEILA <- NEI[NEI$fips=="06037", ]
> 
> NEIMotorBalCity <- subset(NEIBalCity, SCC %in% SCCMotor$SCC)
> NEIMotorBalCityTotal <- aggregate(NEIMotorBalCity$Emissions ~ NEIMotorBalCity$year, FUN=sum)
> 
> NEIMotorLA <- subset(NEILA, SCC %in% SCCMotor$SCC)
> NEIMotorLATotal <- aggregate(NEIMotorLA$Emissions ~ NEIMotorLA$year, FUN=sum)
> 
> NEIMotorCombined <- NEIMotorBalCityTotal
> NEIMotorCombined[,3] <- NEIMotorLATotal[2]
> 
> colnames(NEIMotorCombined) <- c("Year","TotalEmissionsBC","TotalEmissionsLA")
> 
> png(filename="plot6.png", units="px")
> par(mfrow=c(1,2))
> plot(NEIMotorCombined$Year, NEIMotorCombined$TotalEmissionsBC, type="l", xlab="Year", ylab="Total Emissions in tons", main="Baltimore City")
> plot(NEIMotorCombined$Year, NEIMotorCombined$TotalEmissionsLA, type="l", xlab="Year", ylab="Total Emissions in tons", main="Los Angeles")
> dev.off()
null device 
          1 
> 
> proc.time()
   user  system elapsed 
 61.555   0.697  62.691 
